{"version":3,"file":"static/js/562.1cb09a91.chunk.js","mappings":"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","sources":["Pages/HomePage.jsx","components/Message/Message.jsx","components/Message/MessageStyled.js","components/MoviePreview/MoviePreviewStyled.js","components/MoviePreview/MoviePreview.jsx","components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesList.jsx","services/api.js"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport api from \"services/api\";\n\nimport { LoaderSpinner } from \"components/Loader/Loader\";\nimport  MoviesList  from \"components/MoviesList/MoviesList\";\nimport Message from \"components/Message/Message\";\n\nconst HomePage = () => {\n    const[trends, setTrends] = useState ([]);\n    const[isLoading, setIsLoading] = useState(false);\n      // eslint-disable-next-line\n    const[error,setError] = useState('');\n\n    useEffect(()=>{\n        fetchData()\n    }, []);\n\n    const fetchData = async() => {\n        setIsLoading(true);\n\n        try{\n            const movies = await api.fetchTrends();\n            setTrends(movies);\n        } catch (error) {\n            console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n            setError(error.mesage);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return(\n        <main>\n            <h1\n            style={{\n                textAlign: 'center',\n                color: 'wheat',\n                fontSize: '36px',\n                textShadow: '1px 0 1px black',\n            }}>\n                Тренди сьогодення\n            </h1>\n                {trends ? (\n                <MoviesList movies = {trends} />)\n                : (\n                    <Message>\n                        <h2>\n                            сервіс тимчасово втрачено спробуйте, будьласка, пізніше\n                        </h2>\n                    </Message>)\n            }\n            \n            {isLoading&&<LoaderSpinner />}\n        </main>\n    )\n}\n\nexport default HomePage;\n","import PropTypes from 'prop-types';\nimport { MessageStyled } from './MessageStyled';\n\n\nconst Message = ({children}) => {\n    <MessageStyled>{children}</MessageStyled>\n};\n\nMessage.defaultProps = {\n    children: [],\n};\n\nMessage.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Message ;","import styled from 'styled-components';\n\nexport const MessageStyled = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`","import styled from 'styled-components';\n\nexport const DivStyled = styled.div`\n    position: relative;\n    border-radius: 5px;\n`\n\nexport const ImgStyled = styled.img`\n    border-radius: 5px;\n    cursor: pointer;\n    object-fit: cover;\n    box-shadow: 0 0 20px rgba(107, 46 , 6, 0.7);\n`\n\nexport const VoteAverageStyled = styled.p`\n    position: absolute;\n    top: 2%;\n    left: 2%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 50px;\n    height: 15px;\n    clip-path: polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 15% 50%, 0% 0%);\n    background-color: orangered;\n    color: white;\n\n    font-size: 12px;\n    opacity: 0.75;\n`\nexport const VoteWraperStyled = styled.p`\n    display: flex;\n    align-items: center;\n    position: absolute;\n    top: 2%;\n    right: 2%;\n    display: flex;\n    justify-content: center;\n    color: white;\n    font-size: 14px;\n    opacity: 0.9;\n`\nexport const VoteCountStyled = styled.p`\n        text-shadow: 1px 0 1px #8c1b21, 0 1px 1px #8c1b21, -1px 0 1px #8c1b21, 0 -1px 1px #8c1b21;\n`\nexport const TitleStyled = styled.p`\n    margin-top: 4px;\n    font-size: 16px;\n    font-weight: 700;\n    color: black;\n    opacity: 0.75;\n    width: 300px;\n    margin-bottom: 15px;\n`\n","import PropTypes from 'prop-types';\nimport { FaHeart } from 'react-icons/fa';\nimport { \n    DivStyled, \n    ImgStyled, \n    VoteAverageStyled, \n    VoteCountStyled, \n    VoteWraperStyled } from './MoviePreviewStyled';\nimport posterBg from 'utilities/images/poster.png';\n\n\n\nconst MoviePreview = ({title, poster, voteCount, voteAverage}) => {\n    const posterUrl = poster\n        ? `https://image.tmdb.org/t/p/w500${poster}`\n        : posterBg\n\n    return (\n        <DivStyled>\n            <ImgStyled \n            src={posterUrl}\n            alt={title}\n            title={title}\n            />\n            <VoteAverageStyled>{voteAverage}</VoteAverageStyled>\n\n            <VoteWraperStyled> \n                <FaHeart /> \n                <VoteCountStyled>{voteCount}</VoteCountStyled>\n            </VoteWraperStyled>\n\n            <VoteCountStyled>{title? title : 'фільм без підпису'}</VoteCountStyled>\n        </DivStyled>\n    )\n}\n\nMoviePreview.defaultProps = {\n    poster : '',\n    vote: null,\n}\n\nMoviePreview.propTypes = {\n    title: PropTypes.string,\n    poster: PropTypes.string,\n    voteCount: PropTypes.number,\n    voteAverage: PropTypes.number,\n};\nexport default MoviePreview;","import styled from'styled-components';\n\nexport const MoviesListStyled = styled.ul`\npadding-top: 32px;\ndisplay: grid;\ngrid-template-columns: repeat(1, 1fr);\n\n@media screen and ( min-width: 767px){\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 64px;\n}\n\n@media screen and ( min-width: 1440px){\n    grid-template-columns: repeat(3, 1fr);\n}\n`\n\nexport const LiStyled = styled.li`\n    position: relative;\n    transition: all 0.2s;\n\n    &:hover,\n    &:focus {\n    transform: scale(1.02);\n\n    .poster{\n        filter: saturate (175%);\n        box-shadow: 0, 0, 20px rgba(107, 46, 6, 0.7);\n    }\n}\n`","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MoviePreview from 'components/MoviePreview/MoviePreview';\nimport { LiStyled, MoviesListStyled } from './MoviesListStyled';\n\nfunction MoviesList({movies}) {\n    const location = useLocation();\n\n    return (\n        <MoviesListStyled>\n            {movies.map(\n                ({id, original_title, poster_path, vote_average, vote_count},\n                    index\n                    ) => {\n                        return (\n                            <LiStyled key = {index}>\n                                <Link to={`/movies/${id}`} state={{ from: location}}>\n                                    <MoviePreview\n                                    title={original_title} \n                                    poster={poster_path} \n                                    voteAverage={vote_average} \n                                    voteCount={vote_count}/>\n                                </Link>\n                            </LiStyled>\n                        );\n                    }\n            )}\n        </MoviesListStyled>\n    )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            poster: PropTypes.string,\n        })\n    ).isRequired,\n};\n\nexport default MoviesList;","\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = 'd3617e758f1c3082c7bc2da26a77c463';\n\nexport const fetchTrends = async () => {\n    try {\n        const { data } = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n        const trends = data.results;\n        return trends;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchMoviesBySearch = async (searchQuery, currentPage) => {\n    try {\n        const { data } = await axios.get(`search/movie?api_key=${apiKey}&query=${searchQuery}&page=${currentPage}&language=en-US`);\n        const results = data.results;\n        return results;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchMovieById = async (id) => {\n    try {\n        const { data } = await axios.get(`/movie/${id}?api_key=${apiKey}&language=en-US`);\n        return data;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchCast = async (id) => {\n    try {\n        const { data } = await axios.get(`/movie/${id}/credits?api_key=${apiKey}&language=en-US`);\n        return data;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchReviews = async (id) => {\n    try {\n        const { data } = await axios.get(`/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n        return data;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    fetchTrends,\n    fetchMoviesBySearch,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews,\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","trends","setTrends","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movies","wrap","_context","prev","next","api","sent","t0","console","error","mesage","finish","stop","apply","arguments","_jsxs","children","_jsx","style","textAlign","color","fontSize","textShadow","MoviesList","Message","LoaderSpinner","styled","_templateObject","_taggedTemplateLiteral","defaultProps","DivStyled","ImgStyled","_templateObject2","VoteAverageStyled","_templateObject3","VoteWraperStyled","_templateObject4","VoteCountStyled","_templateObject5","_templateObject6","MoviePreview","title","poster","voteCount","voteAverage","posterUrl","concat","posterBg","src","alt","FaHeart","vote","MoviesListStyled","LiStyled","location","useLocation","map","_ref2","index","id","original_title","poster_path","vote_average","vote_count","Link","to","state","from","axios","apiKey","fetchTrends","_yield$axios$get","data","results","abrupt","fetchMoviesBySearch","_callee2","searchQuery","currentPage","_yield$axios$get2","_context2","_x","_x2","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x3","fetchCast","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}