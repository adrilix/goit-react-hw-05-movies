{"version":3,"file":"static/js/717.f79c6a7f.chunk.js","mappings":"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","sources":["components/Actor/ActorStyled.js","components/Actor/Actor.jsx","components/Cast/CastStyled.js","components/Cast/Cast.jsx","components/Message/Message.jsx","components/Message/MessageStyled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\n\n\nexport const ActorPhotoStyled = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: 5px;\n    box-shadow:  0 0 5px rgba(107, 46, 6, 0.7);\n    object-fit: cover;\n    object-position: top;\n\n    @media screen and (min-width: 768px) {\n    object-fit: cover;\n    object-position: top;\n  }\n`\n\nexport const ActorNameStyled = styled.p`\n    margin: 5px 0px;\n    color: rgba (0, 0, 0, 0.75);\n`\n\nexport const ActorCharacterStyled = styled.p`\n    color: wheat;\n`","import PropTypes from 'prop-types';\nimport actorBg from 'utilities/images/actor.png';\nimport { ActorCharacterStyled, ActorNameStyled, ActorPhotoStyled } from './ActorStyled';\n\n\nconst Actor = ({photo, name, character}) => {\n    const photoUrl = photo ? `https://image.tmdb.org/t/p/w300${photo}`: actorBg;\n\n    return (\n        <div>\n            <div>\n                <ActorPhotoStyled src={photoUrl} alt={name}/>\n            </div>\n            <ActorNameStyled>{name}</ActorNameStyled>\n            <ActorCharacterStyled>\n                <span>Character : </span>\n                <b>{character}</b>\n            </ActorCharacterStyled>\n        </div>\n    )\n}\n\nActor.defaultProps = {\n    photo: actorBg,\n};\n\nActor.propTypes = {\n    photo: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n}\n\nexport default Actor;\n","import styled from 'styled-components';\n\nexport const CastListStyled  = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin: -20px 0 20px -20px;\n`\n\n\n\nexport const  ActorStyled = styled.li`\n    flex-basis: calc(100% / 2 - 20px);\n    margin-left: 20px;\n    margin-top: 20px;\n\n    @media screen and (min-width: 768px) and (max-width: 1199px) {\n    flex-basis: calc(100% / 4 - 20px);\n    }\n\n    @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 6 - 20px);\n    }\n` \n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport Actor from 'components/Actor/Actor';\nimport { LoaderSpinner } from 'components/Loader/Loader';\nimport Message from 'components/Message/Message'\n\nimport api from \"services/api\";\nimport { ActorStyled, CastListStyled } from \"./CastStyled\";\n\nfunction Cast () {\n    const[actors, setActors] = useState([]);\n    const[isLoading, setIsLoading] = useState(false);\n    const[error, setError] = useState('');\n\n    const {movieId} = useParams();\n\n    useEffect (()=>{\n        fetchData()\n       // eslint-disable-next-line\n    }, []);\n\n    const fetchData = async() => {\n        setIsLoading(true);\n\n        try{\n            const {cast} = await api.fetchCast(movieId);\n            setActors(cast);\n        }catch(error) {\n            console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n            setError(error.message);\n        }finally{\n            setIsLoading(false);\n        }\n    };\n\n\n    return (\n        <>\n            {actors.length > 0 ? (\n                <CastListStyled>\n                    {actors.map(({id, profile_path, name, character}) => {\n                        return(\n                            <ActorStyled key = {id}>\n                                <Actor photo={profile_path} name={name} character={character}/>\n                            </ActorStyled>\n                        );\n                    })}\n                </CastListStyled>\n            ) : (\n                <p> Інформації про цього актора, нажаль, немає в базі даних</p>\n            )\n\n            }\n            {isLoading && <LoaderSpinner />}\n\n            {error && (\n                <Message>\n                    <h2>Сервіс тимчасово недоступний, спробуйте, будьласка, пізніше</h2>\n                </Message>\n            )}\n        </>\n    )\n}\n\nCast.propTypes = {\n    movieId: PropTypes.object,\n}\n\nexport default Cast;","import PropTypes from 'prop-types';\nimport { MessageStyled } from './MessageStyled';\n\n\nconst Message = ({children}) => {\n    <MessageStyled>{children}</MessageStyled>\n};\n\nMessage.defaultProps = {\n    children: [],\n};\n\nMessage.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Message ;","import styled from 'styled-components';\n\nexport const MessageStyled = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`","\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = 'd3617e758f1c3082c7bc2da26a77c463';\n\nexport const fetchTrends = async () => {\n    try {\n        const { data } = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n        const trends = data.results;\n        return trends;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchMoviesBySearch = async (searchQuery, currentPage) => {\n    try {\n        const { data } = await axios.get(\n            `search/movie?api_key=${apiKey}&query=${searchQuery}&page=${currentPage}&language=en-US`);\n        const results = data.results;\n        return results;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchMovieById = async (id) => {\n    try {\n        const { data } = await axios.get(`/movie/${id}?api_key=${apiKey}&language=en-US`);\n        return data;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchCast = async (id) => {\n    try {\n        const { data } = await axios.get(`/movie/${id}/credits?api_key=${apiKey}&language=en-US`);\n        return data;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\nexport const fetchReviews = async (id) => {\n    try {\n        const { data } = await axios.get(`/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`);\n        return data;\n    } catch (error) {\n        console.error('Щось відбулося не так із запитом до відеотеки. подробиці помилки тут :', error);\n    }\n};\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    fetchTrends,\n    fetchMoviesBySearch,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews,\n};\n"],"names":["ActorPhotoStyled","styled","_templateObject","_taggedTemplateLiteral","ActorNameStyled","_templateObject2","ActorCharacterStyled","_templateObject3","Actor","_ref","photo","name","character","photoUrl","concat","actorBg","_jsxs","children","_jsx","src","alt","defaultProps","CastListStyled","ActorStyled","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$api$fetchCast","cast","wrap","_context","prev","next","api","sent","t0","console","message","finish","stop","apply","arguments","_Fragment","length","map","_ref2","id","profile_path","LoaderSpinner","Message","axios","apiKey","fetchTrends","_yield$axios$get","data","trends","results","abrupt","fetchMoviesBySearch","_callee2","searchQuery","currentPage","_yield$axios$get2","_context2","_x","_x2","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x3","fetchCast","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}